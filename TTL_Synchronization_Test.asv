%% TTL Synchronization Test for Ephys
% Using "Interferometer" setup where TTL signal is sent to logger and
% recorded by logger.
% For use with Deuteron Technology Loggers & LoggerCommand3

clear all; close all;

%% Load in TTL event and recorded TTL data
if true
data_dir = '../sync_test_14';
data = load_logger_command_data(data_dir);
end

t0 = data.timestamps_first_samples_logger_usec{1}(1);

ref_timings = data.ttl_timestamps_usec;
ref_samples = ref_timings/32;

rec = mean(data.csc,2);
figure
plot(rec);

hold on
for i=1:length(ref_timings);
    xline((ref_timings(i)-t0)/32);
end
shg;

% Get rising edges of recorded signal
dy = diff(rec);                % Take Derivative
[dypks,ix] = findpeaks(dy, 'MinPeakHeight', 5, 'MinPeakProminence', 2, 'MinPeakDistance', 31250*2);
ix = ix/32 + t0;
figure;
hold on
for i=1:length(ix);
    xline(ix(i));
end
shg;
rec_timings = ix;
rec_samples = rec_timings*32;
%% Plot Recorded and Reference TTL


%% TTL counts
ref_ttl_count = length(rec_samples);
rec_ttl_count = length(ref_samples);

disp(ref_ttl_count);
disp(rec_ttl_count);
assert(ref_ttl_count == rec_ttl_count, 'Recorded and Reference TTL counts do not match!');

%% TTL timings
figure;
tiledlayout(2,2);
nexttile;
histogram(diff(ref_timings)-3*10^6, 10);
title('TTL timing difference error (usec)');

nexttile;
scatter(rec_timings, ref_timings);
title('Recorded TTL vs Reference TTL timings (usec)');

nexttile;
scatter(ref_samples/32, rec_samples/32 - ref_samples/32);
title('Recorded - Reference TTL Difference (usec)');

nexttile;
histogram(rec_samples - ref_samples, 10);
title('Recorded - Reference TTL Diff Hist (usec)');

